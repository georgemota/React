name: Deploy multi projects to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build_each:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:

          - name: 01-intro-react
            path: 01-intro-react
            type: static

          - name: 03-counter-app-cra
            path: 03-counter-app-cra
            type: cra
          
          - name: 03-custom-counter-app-vite
            path: 03-custom-counter-app-vite
            type: vite

          - name: 04-default-counter-app-vite
            path: 04-default-counter-app-vite
            type: vite
                      
          - name: 05-gif-expert-app
            path: 05-gif-expert-app
            type: vite

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        if: hashFiles(format('{0}/package-lock.json', matrix.path)) != ''
        uses: actions/cache@v4
        with:
          path: ${{ matrix.path }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.path)) }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build project ${{ matrix.name }}
        working-directory: ${{ matrix.path }}
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          PUBLIC_URL: /${{ github.event.repository.name }}/${{ matrix.name }}/
        run: |
                set -e
                echo "Proyecto: ${{ matrix.name }} | Tipo: ${{ matrix.type }}"
      
                # 1) Instalar dependencias del proyecto
                if [ -f package.json ]; then
                  if [ -f package-lock.json ]; then npm ci; else npm install; fi
                fi
      
                # 1.5) (WORKAROUND) Solo para Vite/rollup en Linux: instalar binario nativo
                if [ "${{ matrix.type }}" = "vite" ]; then
                  npm install -D --no-audit --no-fund @rollup/rollup-linux-x64-gnu@latest || true
                fi
      
                # 2) Build segÃºn tipo
                case "${{ matrix.type }}" in
                  static)
                    OUT_DIR="$(pwd)"
                    ;;
      
                  vite)
                    if grep -q "\"build\"" package.json; then
                      npm run build -- --base="/$REPO_NAME/${{ matrix.name }}/"
                    else
                      npx vite build --base="/$REPO_NAME/${{ matrix.name }}/"
                    fi
                    OUT_DIR="dist"
                    ;;
      
                  cra)
                    npm run build
                    OUT_DIR="build"
                    ;;
      
                  *)
                    echo "Tipo no soportado: ${{ matrix.type }}"; exit 1 ;;
                esac
      
                # 3) Empaquetar salida
                DEST="$GITHUB_WORKSPACE/site_${{ matrix.name }}"
                mkdir -p "$DEST"
                if [ "${{ matrix.type }}" = "static" ]; then
                  shopt -s dotglob
                  cp -r ./* "$DEST/"
                else
                  cp -r "$OUT_DIR"/* "$DEST/"
                fi
                if [ -f "$DEST/index.html" ]; then cp "$DEST/index.html" "$DEST/404.html"; fi
      

      - name: Upload artifact for ${{ matrix.name }}
        uses: actions/upload-artifact@v4
        with:
          name: project-${{ matrix.name }}
          path: site_${{ matrix.name }}

  combine_and_deploy:
    needs: build_each
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: _dl

      - name: Assemble site
        run: |
          set -e
          mkdir -p site
          for d in _dl/project-*; do
            name=$(basename "$d" | sed 's/^project-//')
            mkdir -p "site/$name"
            cp -r "$d"/* "site/$name/"
          done

          cat > site/index.html <<'HTML'
          <!doctype html><meta charset="utf-8">
          <title>Proyectos</title>
          <style>
          body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:40px;line-height:1.6}
          h1{margin-bottom:0.5rem}ul{padding-left:1.2rem}
          a{text-decoration:none}a:hover{text-decoration:underline}
          code{background:#f3f3f3;padding:2px 6px;border-radius:4px}
          </style>
          <h1>Proyectos publicados</h1><ul>
          HTML
          for d in site/*/ ; do
            name=$(basename "$d")
            echo "  <li><a href=\"./$name/\">$name</a></li>" >> site/index.html
          done
          cat >> site/index.html <<'HTML'
          </ul>
          <p>Repositorio: <a href="https://github.com/${{ github.repository }}">@${{ github.repository }}</a></p>
          HTML

      - uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - uses: actions/deploy-pages@v4
